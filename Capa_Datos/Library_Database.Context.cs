//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capa_Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LibraryUniversityEntities : DbContext
    {
        public LibraryUniversityEntities()
            : base("name=LibraryUniversityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Administrator> Administrators { get; set; }
        public DbSet<Book> Books { get; set; }
        public DbSet<Career> Careers { get; set; }
        public DbSet<Condition> Conditions { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Loan> Loans { get; set; }
        public DbSet<Person> People { get; set; }
        public DbSet<Sanction> Sanctions { get; set; }
        public DbSet<StockBook> StockBooks { get; set; }
        public DbSet<Student> Students { get; set; }
    
        public virtual ObjectResult<sp_ShowPersons_Result> sp_ShowPersons(string filter)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowPersons_Result>("sp_ShowPersons", filterParameter);
        }
    
        public virtual ObjectResult<string> sp_RegisterStudent(string name, string lastName, Nullable<int> dni, Nullable<System.DateTime> birthDate, Nullable<int> phone, string email, string password, Nullable<int> career, string condition, ObjectParameter salida)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(int));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("birthDate", birthDate) :
                new ObjectParameter("birthDate", typeof(System.DateTime));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var careerParameter = career.HasValue ?
                new ObjectParameter("career", career) :
                new ObjectParameter("career", typeof(int));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_RegisterStudent", nameParameter, lastNameParameter, dniParameter, birthDateParameter, phoneParameter, emailParameter, passwordParameter, careerParameter, conditionParameter, salida);
        }
    }
}
